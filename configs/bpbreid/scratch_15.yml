project:
  name: "Person-Re-Identification"
  experiment_name: "BPBreID"
  logger:
    use_clearml: False
    use_neptune: False
    use_tensorboard: False
    matplotlib_show: False
    use_wandb: False

data:
  root: '/kaggle/working/'
  type: 'image'
  sources: ['soccernet']
  targets: ['soccernet']
  height: 256
  width: 128
  combineall: False
  transforms: ['rc', 'rf', 're']
  ro:
    path: "/kaggle/input/pascal-voc-2012"
    p: 0.5
    n: 1
    min_overlap: 0.2
    max_overlap: 0.8

  save_dir: 'kaggle/working/'
  workers: 0

sampler:
  train_sampler: RandomIdentitySampler # sampler for source train loader
  train_sampler_t: RandomIdentitySampler # sampler for target train loader
  num_instances: 4 # number of instances per identity for RandomIdentitySampler

model:
  name: 'bpbreid'
  pretrained: True
  load_weights: '/kaggle/working/resnet50-19c8e357.pth'
  save_model_flag: True
  bpbreid:
    pooling: 'gwap'
    normalization: 'identity'
    mask_filtering_training: False
    mask_filtering_testing: False
    training_binary_visibility_score: True
    testing_binary_visibility_score: True
    last_stride: 1
    learnable_attention_enabled: False
    dim_reduce: 'after_pooling' # 'none', 'before_pooling', 'after_pooling', 'after_pooling_with_dropout'
    dim_reduce_output: 128
    backbone: 'resnet50' # 'hrnet32' 'resnet50'
    test_embeddings: ['parts'] #  ['globl', 'foreg', 'parts']
    test_use_target_segmentation: 'none' # 'none' 'hard' 'soft'
    shared_parts_id_classifier: False
    masks:
      type: 'stripes'
      dir: 'pifpaf'
      parts_num: 2
      preprocess: 'strp_2'  # 'none', 'full', 'id', 'ids', 'bs_fu', 'bs_fu_bb', 'mu_sc', 'four', 'four_no', 'four_v', 'four_v_pif', 'five_v', 'six', 'six_no', 'eight'
      background_computation_strategy: 'threshold'  # threshold, diff_from_max
      softmax_weight: 15
      mask_filtering_threshold: 0.6

loss:
  name: 'part_based'
  part_based:
    name: 'part_averaged_triplet_loss' # ['inter_parts_triplet_loss', 'intra_parts_triplet_loss', 'part_based_triplet_loss_max', 'part_based_triplet_loss_mean', 'part_based_triplet_loss_min', 'part_based_triplet_loss_max_min', 'part_based_triplet_loss_random_max_min']
    weights:
      globl:
        id: 1.
        tr: 0.
      foreg:
        id: 1.
        tr: 0.
      conct:
        id: 1.
        tr: 0.
      parts:
        id: 1.
        tr: 1.
      pixls:
        ce: 0.

train:
  batch_size: 64
  eval_freq: 5
  start_epoch: 0
  max_epoch: 20
  optim: 'adam' # 'adam', 'amsgrad', 'sgd', 'rmsprop', 'radam'
  lr: 0.00035
  lr_scheduler: 'single_step' # 'single_step' 'multi_step' 'cosine'
  stepsize: [40, 70] # stepsize to decay learning rate
  fixbase_epoch: 0
  open_layers: ['global_avgpool', 'foreground_global_attention_pooling_head', 'background_global_attention_pooling_head',
                'global_attention_pooling_head', 'pixel_classifier', 'global_identity_classifier',
                'background_identity_classifier', 'foreground_identity_classifier', 'parts_identity_classifier']

test:
  batch_size: 30
  batch_size_pairwise_dist_matrix: 5000
  normalize_feature: True
  dist_metric: 'cosine' # distance metric, ['euclidean', 'cosine']
  evaluate: False # test only
  visrank: True
  visrank_per_body_part: False
  vis_embedding_projection: False
  vis_feature_maps: False
  visrank_topk: 10
  visrank_count: 2
  part_based:
    dist_combine_strat: mean
